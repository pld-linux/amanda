--- amanda-3.2.3/common-src/glib-util.c~	2010-12-08 23:09:29.000000000 +0100
+++ amanda-3.2.3/common-src/glib-util.c	2012-04-03 12:02:32.801046078 +0200
@@ -120,6 +120,7 @@
 }
 #endif
 
+#if (GLIB_MAJOR_VERSION < 2 || (GLIB_MAJOR_VERSION == 2 && GLIB_MINOR_VERSION < 32))
 void g_queue_free_full(GQueue * queue) {
     while (!g_queue_is_empty(queue)) {
         gpointer data;
@@ -128,6 +129,7 @@
     }
     g_queue_free(queue);
 }
+#endif
 
 void g_ptr_array_free_full(GPtrArray * array) {
     size_t i;
--- amanda-3.2.3/common-src/glib-util.h~	2010-12-08 23:09:29.000000000 +0100
+++ amanda-3.2.3/common-src/glib-util.h	2012-04-03 12:03:14.514381294 +0200
@@ -72,7 +72,9 @@
 
 /* These functions all take a GLib container, and call free() on all the
  * pointers in the container before free()ing the container itself. */
+#if (GLIB_MAJOR_VERSION < 2 || (GLIB_MAJOR_VERSION == 2 && GLIB_MINOR_VERSION < 32))
 void g_queue_free_full(GQueue * queue);
+#endif
 void g_ptr_array_free_full(GPtrArray * array);
 
 /* g_value_compare() does what you expect. It returns TRUE if and
--- amanda-3.2.3.old/common-src/glib-util.c	2012/03/10 13:43:52
+++ amanda-3.2.3/common-src/glib-util.c	2012/05/07 17:25:35
@@ -42,7 +42,9 @@
      * is initialized) */
 #ifdef HAVE_LIBCURL
 # ifdef G_THREADS_ENABLED
+#  if (GLIB_MAJOR_VERSION < 2 || (GLIB_MAJOR_VERSION == 2 && GLIB_MINOR_VERSION < 32))
     g_assert(!g_thread_supported()); /* assert threads aren't initialized yet */
+#  endif
 # endif
     g_assert(curl_global_init(CURL_GLOBAL_ALL) == 0);
 #endif

